{
	"info": {
		"_postman_id": "a9a59c28-6aa1-4a77-b189-3ae33260e3bd",
		"name": "thetestingworldApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26949822",
		"_collection_link": "https://www.postman.com/maintenance-explorer-59429737/workspace/project/collection/26949822-a9a59c28-6aa1-4a77-b189-3ae33260e3bd?action=share&creator=26949822&source=collection_link"
	},
	"item": [
		{
			"name": "Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var data = pm.response.json()\r",
							"console.log(data.length)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}//api/studentsDetails",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"api",
						"studentsDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "createStudent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"var data = pm.response.json()\r",
							"console.log(data.id)\r",
							"pm.environment.set(\"id\",data.id)\r",
							"pm.environment.set(\"first_name\",data.first_name)\r",
							"pm.environment.set(\"last_name\",data.last_name)\r",
							"pm.environment.set(\"middle_name\",data.middle_name)\r",
							"pm.environment.set(\"date_of_birth\",data.date_of_birth)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"first_name\": \"sample string 2\", \r\n\"middle_name\": \"sample string 3\", \r\n\"last_name\": \"sample string 4\",\r\n \"date_of_birth\": \"sample string 5\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/studentsDetails",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "specificStudent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var res = pm.response.json()\r",
							"var code = pm.response.code\r",
							"console.log(res.id)\r",
							"switch(code)\r",
							"{\r",
							"    case 200:\r",
							"        pm.test(\"Status Code in Ok\")\r",
							"      \r",
							"        pm.test(\"ID Validation\",function(){\r",
							"            pm.expect(res.data.id).to.eql(pm.environment.get(\"id\"))\r",
							"        })\r",
							"\r",
							"         pm.test(\"First Name Validation\",function(){\r",
							"            pm.expect(res.data.first_name).to.eql(pm.environment.get(\"first_name\"))\r",
							"        })\r",
							"\r",
							"         pm.test(\"Middle Name Validation\",function(){\r",
							"            pm.expect(res.data.middle_name).to.eql(pm.environment.get(\"middle_name\"))\r",
							"        })\r",
							"\r",
							"         pm.test(\"Last Name Validation\",function(){\r",
							"            pm.expect(res.data.last_name).to.eql(pm.environment.get(\"last_name\"))\r",
							"        })\r",
							"\r",
							"         pm.test(\"Date of Birth  Validation\",function(){\r",
							"            pm.expect(res.data.date_of_birth).to.eql(pm.environment.get(\"date_of_birth\"))\r",
							"        })\r",
							"        break;\r",
							"\r",
							"    default:\r",
							"    pm.test(\"Something Went Wrong..\")\r",
							"       \r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}//api/studentsDetails/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"api",
						"studentsDetails",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Technical Skills",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"id\": 1,\r\n\"language\": [\r\n\"sample string 1\",\r\n\"sample string 2\"\r\n],\r\n\"yearexp\": \"sample string 2\",\r\n\"lastused\": \"sample string 3\",\r\n\"st_id\": {{id}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/technicalskills",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"technicalskills"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Student Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"var code = pm.response.code\r",
							"switch(code)\r",
							"{\r",
							"    case 200:\r",
							"        pm.test(\"Status code is okey\")\r",
							"        pm.test(\"Status validation\",function(){\r",
							"            pm.expect(data.status).to.eql(\"true\")\r",
							"        })\r",
							"        pm.test(\"Status validation\",function(){\r",
							"            pm.expect(data.msg).to.eql(\"Add  data success\")\r",
							"        })\r",
							"        break;\r",
							"    default:\r",
							"        pm.test(\"Somethin went wrong\")\r",
							"\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"Permanent_Address\":\r\n { \"House_Number\": \"sample string 1\",\r\n \"City\": \"sample string 2\",\r\n  \"State\": \"sample string 3\",\r\n   \"Country\": \"sample string 4\",\r\n   \"PhoneNumber\":[\r\n            { \"Std_Code\": \"sample string 1\",\r\n            \"Home\": \"sample string 2\",\r\n             \"Mobile\": \"samplestring 3\"\r\n             },\r\n\r\n            { \"Std_Code\": \"sample string 1\",\r\n            \"Home\": \"sample string 2\", \r\n            \"Mobile\": \"samplestring 3\"}\r\n             ]\r\n},\r\n\"stId\": {{id}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/addresses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "FINAL STUDENT DETAILS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"var code = pm.response.code\r",
							"switch(code)\r",
							"{\r",
							"    case 200:\r",
							"        pm.test(\"Status code is okey\")\r",
							"        pm.test(\"Language validation\",function(){\r",
							"            pm.expect(data.data.TechnicalDetails[0].language[0]).to.eql(\"sample string 1\")\r",
							"        })\r",
							"\r",
							"        pm.test(\"Year of experiance  validation\",function(){\r",
							"            pm.expect(data.data.TechnicalDetails[0].yearexp).to.eql(\"sample string 2\")\r",
							"        })\r",
							"\r",
							"         pm.test(\"House no validation\",function(){\r",
							"            pm.expect(data.data.Address[0].Permanent_Address.House_Number).to.eql(\"sample string 1\")\r",
							"        })\r",
							"\r",
							"         pm.test(\"City validation\",function(){\r",
							"            pm.expect(data.data.Address[0].Permanent_Address.City).to.eql(\"sample string 2\")\r",
							"        })\r",
							"\r",
							"        pm.test(\"Country  validation\",function(){\r",
							"            pm.expect(data.data.Address[0].Permanent_Address.Country).to.eql(\"sample string 4\")\r",
							"        })\r",
							"\r",
							"         pm.test(\"Mobile validation\",function(){\r",
							"            pm.expect(data.data.Address[0].Permanent_Address.PhoneNumber[0].Mobile).to.eql(\"samplestring 3\")\r",
							"        })\r",
							"\r",
							"        pm.test(\"Current Address\",function(){\r",
							"            pm.expect(data.data.Address[0].Current_Address).to.eql(null)\r",
							"        })\r",
							"        break;\r",
							"    default:\r",
							"        pm.test(\"Somethin went wrong\")\r",
							"\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/FinalStudentDetails/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"FinalStudentDetails",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}